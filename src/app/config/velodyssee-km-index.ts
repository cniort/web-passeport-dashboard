// Index kilom√©trique des points relais sur l'itin√©raire de La V√©lodyss√©e
// Roscoff (km 0) ‚Üí Hendaye (km ~1200)

export const VELODYSSEE_KM_INDEX: Record<string, number> = {
  // √Ä g√©n√©rer automatiquement via script de g√©ocodage
  // Format: "Nom du point relais": position_km_sur_itin√©raire
  
  // Points de r√©f√©rence connus (estimation)
  "Roscoff": 0,
  "Morlaix": 45,
  "Brest": 85,
  "Quimper": 165,
  "Lorient": 220,
  "Vannes": 280,
  "La Baule": 350,
  "Saint-Nazaire": 360,
  "Nantes": 400,
  "La Rochelle": 550,
  "Royan": 620,
  "Bordeaux": 750,
  "Arcachon": 780,
  "Biscarrosse": 850,
  "Dax": 950,
  "Biarritz": 1100,
  "Saint-Jean-de-Luz": 1150,
  "Hendaye": 1200
};

// Fonction de tri des points relais selon l'itin√©raire V√©lodyss√©e
export function sortByVelodysseeOrder(relayPoints: { name: string }[], reverse = false) {
  return relayPoints.sort((a, b) => {
    // Recherche du km pour chaque point relais
    const getKmForRelay = (relayName: string): number => {
      // Recherche exacte
      if (VELODYSSEE_KM_INDEX[relayName] !== undefined) {
        return VELODYSSEE_KM_INDEX[relayName];
      }
      
      // Recherche partielle par mots-cl√©s de ville
      for (const [indexedName, km] of Object.entries(VELODYSSEE_KM_INDEX)) {
        if (relayName.toLowerCase().includes(indexedName.toLowerCase()) ||
            indexedName.toLowerCase().includes(relayName.toLowerCase())) {
          return km;
        }
      }
      
      // Si non trouv√©, placer √† la fin
      return 9999;
    };
    
    const kmA = getKmForRelay(a.name);
    const kmB = getKmForRelay(b.name);
    
    return reverse ? kmB - kmA : kmA - kmB;
  });
}

// TODO: Script de g√©n√©ration automatique de l'index complet
export async function generateVelodysseeIndex(relayNames: string[]): Promise<Record<string, number>> {
  // 1. T√©l√©charger le GPX de La V√©lodyss√©e depuis lavelodyssee.com
  // 2. G√©ocoder chaque point relais pour obtenir ses coordonn√©es
  // 3. Projeter chaque point sur l'itin√©raire GPX
  // 4. Calculer la distance cumul√©e depuis Roscoff
  // 5. Retourner l'index complet
  
  console.log('üö¥‚Äç‚ôÇÔ∏è G√©n√©ration de l\'index V√©lodyss√©e pour', relayNames.length, 'points relais');
  console.log('üìç Cette fonctionnalit√© n√©cessite l\'impl√©mentation du g√©ocodage et du parsing GPX');
  
  return VELODYSSEE_KM_INDEX;
}